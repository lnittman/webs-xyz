// Prisma schema for Webs

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  output          = "../generated/client"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Web {
  id          String      @id @default(uuid())
  url         String      @db.Text // Primary URL (deprecated - use urls)
  urls        String[] // Array of URLs to analyze
  domain      String? // Primary domain for grouping
  title       String? // Overall title
  description String?     @db.Text // Overall summary
  prompt      String?     @db.Text // User prompt
  status      WebStatus   @default(PENDING)
  // Analysis results
  analysis    Json? // Full analysis JSON
  topics      String[] // Extracted topics
  sentiment   String? // Overall sentiment
  confidence  Float? // Confidence score
  readingTime Float? // Estimated reading time
  insights    String[] // Key insights
  // Additional discovered URLs
  relatedUrls String[] // URLs found in content
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  messages    Message[]
  entities    WebEntity[] // Extracted entities

  @@index([domain])
  @@index([createdAt])
  @@index([status])
}

model WebEntity {
  id        String   @id @default(uuid())
  webId     String
  web       Web      @relation(fields: [webId], references: [id], onDelete: Cascade)
  type      String // person, organization, location, etc.
  value     String // The actual entity value
  createdAt DateTime @default(now())

  @@index([webId])
  @@index([type])
}

model Message {
  id        String      @id @default(uuid())
  webId     String?
  web       Web?        @relation(fields: [webId], references: [id])
  type      MessageType @default(TEXT)
  content   String      @db.Text
  createdAt DateTime    @default(now())

  @@index([webId])
}

model Feedback {
  id        String         @id @default(uuid())
  topic     FeedbackTopic
  message   String
  userAgent String? // Browser/device info
  url       String? // Page where feedback was submitted
  userId    String? // Optional user ID if authenticated
  status    FeedbackStatus @default(OPEN)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  @@index([topic])
  @@index([status])
  @@index([createdAt])
}

model UserSettings {
  id                       String   @id @default(uuid())
  userId                   String   @unique // Clerk user ID or similar
  // Appearance settings
  fontFamily               String   @default("iosevka-term")
  // Notification settings
  notifyProcessingComplete Boolean  @default(true)
  notifyProcessingFailed   Boolean  @default(true)
  notifyWeeklySummary      Boolean  @default(false)
  notifyFeatureUpdates     Boolean  @default(false)
  // General settings
  workspaceName            String?
  defaultModel             String   @default("claude-4-sonnet")
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt

  @@index([userId])
}

enum WebStatus {
  PENDING
  PROCESSING
  COMPLETE
  FAILED
}

enum MessageType {
  TEXT
  TOOL
  SYSTEM
  AI
}

enum FeedbackTopic {
  BUG
  FEATURE
  UI
  PERFORMANCE
  GENERAL
}

enum FeedbackStatus {
  OPEN
  IN_PROGRESS
  RESOLVED
  CLOSED
}
